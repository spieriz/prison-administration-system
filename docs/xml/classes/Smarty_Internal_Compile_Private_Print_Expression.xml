<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Smarty_Internal_Compile_Private_Print_Expression" namespace="" name="Smarty_Internal_Compile_Private_Print_Expression" abstract="false" final="false" start="17" end="161">
  <file path="D:/Programy/XAMPP/htdocs/pas/includes/libs/Smarty/sysplugins" file="smarty_internal_compile_private_print_expression.php" realpath="D:/Programy/XAMPP/htdocs/pas/includes/libs/Smarty/sysplugins/smarty_internal_compile_private_print_expression.php" size="6844" time="2019-01-07T14:14:48+01:00" unixtime="1546866888" sha1="9c4b9203b50d3887ecd152c5f9f9b6f18b4a683a" relative="includes/libs/Smarty/sysplugins/smarty_internal_compile_private_print_expression.php"/>
  <docblock>
    <description compact="Smarty Internal Plugin Compile Print Expression Class"/>
    <package value="Smarty"/>
    <subpackage value="Compiler"/>
  </docblock>
  <extends full="Smarty_Internal_CompileBase" namespace="" name="Smarty_Internal_CompileBase"/>
  <member name="optional_attributes" default="" type="array" visibility="public" static="false" line="25">
    <docblock>
      <description compact="Attribute definition: Overwrites base class."/>
      <var type="array"/>
      <see value="Smarty_Internal_CompileBase"/>
    </docblock>
  </member>
  <member name="option_flags" default="" type="array" visibility="public" static="false" line="33">
    <docblock>
      <description compact="Attribute definition: Overwrites base class."/>
      <var type="array"/>
      <see value="Smarty_Internal_CompileBase"/>
    </docblock>
  </member>
  <method name="compile" start="45" end="141" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compiles code for generating output from any expression"/>
      <param description="array with attributes from parser" type="array" variable="$args"/>
      <param description="compiler object" type="object" variable="$compiler">
        <type full="\Smarty_Internal_TemplateCompilerBase" namespace="" name="Smarty_Internal_TemplateCompilerBase"/>
      </param>
      <param description="array with compilation parameter" type="array" variable="$parameter"/>
      <return type="string"/>
      <throws type="object">
        <type full="\SmartyException" namespace="" name="SmartyException"/>
      </throws>
    </docblock>
    <parameter name="args" byreference="false" type="{unknown}"/>
    <parameter name="compiler" byreference="false" type="object">
      <type full="Smarty_Internal_TemplateCompilerBase" namespace="" name="Smarty_Internal_TemplateCompilerBase"/>
    </parameter>
    <parameter name="parameter" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="check and get attributes" line="47"/>
      <comment value="tag modifier" line="50"/>
    </inline>
  </method>
  <method name="compile_variable_filter" start="151" end="160" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param description="compiler object" type="object" variable="$compiler">
        <type full="\Smarty_Internal_TemplateCompilerBase" namespace="" name="Smarty_Internal_TemplateCompilerBase"/>
      </param>
      <param description="name of variable filter" type="string" variable="$name"/>
      <param description="embedded output" type="string" variable="$output"/>
      <return type="string"/>
      <throws type="object">
        <type full="\SmartyException" namespace="" name="SmartyException"/>
      </throws>
    </docblock>
    <parameter name="compiler" byreference="false" type="object">
      <type full="Smarty_Internal_TemplateCompilerBase" namespace="" name="Smarty_Internal_TemplateCompilerBase"/>
    </parameter>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="output" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Smarty_Internal_CompileBase" namespace="" name="Smarty_Internal_CompileBase">
    <member name="required_attributes" default="" type="array" visibility="public" static="false" line="23">
      <docblock>
        <description compact="Array of names of required attribute required by tag"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="optional_attributes" default="" type="array" visibility="public" static="false" line="31">
      <docblock>
        <description compact="Array of names of optional attribute required by tag use array('_any') if there is no restriction of attributes names"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="shorttag_order" default="" type="array" visibility="public" static="false" line="38">
      <docblock>
        <description compact="Shorttag attribute order defined by its names"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="option_flags" default="" type="array" visibility="public" static="false" line="45">
      <docblock>
        <description compact="Array of names of valid option flags"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="optionMap" default="" type="array" visibility="public" static="false" line="52">
      <docblock>
        <description compact="Mapping array for boolean option value"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="mapCache" default="" type="array" visibility="public" static="false" line="59">
      <docblock>
        <description compact="Mapping array with attributes as key"/>
        <var type="array"/>
      </docblock>
    </member>
    <method name="getAttributes" start="73" end="156" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="This function checks if the attributes passed are valid The attributes passed for the tag to compile are checked against the list of required and optional attributes. Required attributes must be present. Optional attributes are check against the corresponding list. The keyword '_any' specifies that any attribute will be accepted as valid"/>
        <param description="compiler object" type="object" variable="$compiler"/>
        <param description="attributes applied to the tag" type="array" variable="$attributes"/>
        <return description="of mapped attributes for further processing" type="array"/>
      </docblock>
      <parameter name="compiler" byreference="false" type="{unknown}"/>
      <parameter name="attributes" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="check if all required attributes present" line="121"/>
        <comment value="check for not allowed attributes" line="127"/>
        <comment value="default 'false' for all option flags not set" line="146"/>
      </inline>
    </method>
    <method name="openTag" start="166" end="169" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Push opening tag name on stack Optionally additional data can be saved on stack"/>
        <param description="compiler object" type="object" variable="$compiler"/>
        <param description="the opening tag's name" type="string" variable="$openTag"/>
        <param description="optional data saved" type="mixed" variable="$data"/>
      </docblock>
      <parameter name="compiler" byreference="false" type="{unknown}"/>
      <parameter name="openTag" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="closeTag" start="180" end="202" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Pop closing tag Raise an error if this stack-top doesn't match with expected opening tags"/>
        <param description="compiler object" type="object" variable="$compiler"/>
        <param description="the expected opening tag names" type="object" variable="$expectedTag">
          <type full="array|string" namespace="" name="array|string"/>
        </param>
        <return description="any type the opening tag's name or saved data" type="mixed"/>
      </docblock>
      <parameter name="compiler" byreference="false" type="{unknown}"/>
      <parameter name="expectedTag" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="wrong nesting of tags" line="199"/>
      </inline>
    </method>
  </parent>
</class>
